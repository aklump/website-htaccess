#
#  This is an advanced example configuration file with descriptions.
#

# You may include a header that appears at the top of the compiled file.  You
# may use \n in your string here.
header: This file is autogenerated; do not modify.

# Use the 'redirects' key to set up .htaccess redirects.  The most common use
# case would be to map legacy URLs to new ones.  Redirects defined at the top
# level are shared across all .htaccess files.  See also file-level.  Regex is
# supported, see example below.  Other status codes can be returned by giving
# the numeric status code as the value of status. If the status is between 300
# and 399, the URL argument must be present. If the status is not between 400
# and 499, the URL argument must be omitted. The status must be a valid HTTP
# status code, known to the Apache HTTP Server (see the function
# send_error_response in http_protocol.c). To learn more see:
# https://httpd.apache.org/docs/current/mod/mod_alias.html#redirectmatch
redirects:
  301:
    - /some/old/path /some/new/path

    # Notice the use of the escaped $, e.g. '\$' in this example for the replace
    # side of this line.
    - /foo/(.+) /bar/\$1
  403:
    - /some/forbidden/path

# You must define at least one file configuration, but may have as many as are
# necessary.  Each item generates a single .htaccess file.
files:

  # This section configures generation of our Drupal 7 webroot .htaccess file
  # for the production/live website.
  prod_webroot:

    # A title to describe this section to adminstrators.
    title: Production .htaccess for Drupal 7 webroot

    # Required.  At least one valid hostname including http or https protocol.
    # List the hosts the $output file will be operating under. This/these
    # values are used to auto-detect force_ssl and www_prefix settings, unless
    # overridden as shown below.
    valid_hosts:
      - https://www.my-project.edu
      - https://www.d8.my-project.edu

    # One or more paths where the output file will be saved.  Any parent
    # directories must already exist or the write will fail.  This may be a
    # string or an array, as shown.  It's possible the the header timestamp may
    # differ for each of these files.
    output:
      - web/.htaccess.prod
      - install/default/.htaccess.prod

    # A list of source files to merge together.  They are merged in the order as
    # listed.
    source:
      # This is another autogenerated file that is > 3000 lines of banned IPs.
      - apache/.htaccess.banned_ips

      # We should add any customizations to this file.
      - apache/webroot/.htaccess.custom

      # This will pull in the master branch 7.x .htaccess file.
      - https://raw.githubusercontent.com/drupal/drupal/7.x/.htaccess

    # Set true or false.  True will strip comment lines except header.  False
    # will leave them alone.
    remove_comments: true

    # Since our website is Drupal 7, we want to fast 404 common wordpress paths
    # so that Drupal doesn't have to bootstrap nor handle them.
    ban_wordpress: true

    # OPTIONAL OVERRIDE to the auto-detected setting based on valid_hosts.  See
    # README.md for more info.  Set this to 'true' to make sure the site is
    # served over HTTPS.
    force_ssl: true

    # OPTIONAL OVERRIDE to the auto-detected setting based on valid_hosts.  See
    # README.md for more info.  Set this to either 'add' or 'remove' to handle
    # the "www" prefix on the domain.  'add' will ensure that "www." appears in
    # the domain; "remove" will take it away.
    www_prefix: remove

    # Hot link protection prevents directly linking to files, pictures, etc on
    # your website.  Configure a list of file extensions that may NOT be linked
    # to.  If an extension appears in this list then links to such files will be
    # 403 forbidden. This means that if "jpg" is included then tags like <img
    # src="foo.jpg"/> will not work.  Omit this key to allow hotlinking.
    hotlinks:
      deny:
        - gif
        - jpg
        - jpeg
        - png
        - mp3
        - mpg
        - avi
        - mov

    # Redirects defined at the file evel are only added to this file.
    redirects:
      301:
        - /another/old/path /another/new/path

  # This section configures generation of our Drupal 7 webroot .htaccess file
  # for the staging website.
  staging_webroot:
    title: Staging .htaccess for Drupal 7 webroot
    output: web/.htaccess.staging
    source:
      - apache/webroot/.htaccess.custom
      - https://raw.githubusercontent.com/drupal/drupal/7.x/.htaccess

    # You can set this to false to block inheritance of the shared redirects.
    redirects:
      # By setting this to false, the top-level redirects will be ignored.  This
      # is true by default i.e., when omitted.
      inherit: false
      301:
        - /only/one/redirect /goes/here

    # This key allows us to list out IPs to ban.  The values here will be used
    # to generate "deny from" code so feel free to use full IPs or partial ones.
    ban_ips:
      - 192.236.147.204
      - 192.237.210.209
      - 192.239.12.141

    # This will add the http_auth code.  You must still generate the password
    # file manually.  See
    # https://httpd.apache.org/docs/current/programs/htpasswd.html for more
    # info.  Be aware that the first time a browser visits an URL, it will have
    # to enter this password, if the URL is also redirected to SSL, they will
    # immediately have to reenter the same password.  This is due to having to
    # unlock both SSL and non-SSL ports, and the fact that redirection occurs
    # after authorization.
    http_auth:

      # This will appear in the Apache password box.
      title: Staging Server

      # The absolute path on the server to the password file that you generated
      # using the htpasswd command.
      user_file: /var/www/passwords

      # You may whitelist any IPs that should not have to log in.
      whitelist:
        - 127.127.127.127
        - 127.127.127.128
